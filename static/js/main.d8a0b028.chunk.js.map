{"version":3,"sources":["components/filter-panel/filter-panel.module.scss","components/todo-list/todo-item/todo-item.module.scss","components/app/img/react.png","components/app-title/index.js","components/app-title/app-title.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/filter-panel/index.js","components/filter-panel/filter-panel.js","components/todo-list/todo-item/index.js","components/todo-list/todo-item/todo-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/add-item/index.js","components/add-item/add-item.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","AppTitle","className","SearchPanel","type","placeholder","FilterPanel","state","all","todo","important","setAll","setState","setTodo","setImportant","allClasses","classes","filterPanel__button","todoClasses","importantClasses","this","filterPanel__button_clicked","filterPanel","onClick","Component","TodoItem","done","delete","itemDone","props","text","onDelItem","itemClasses","todoItem","todoItemDone","todoItemImportant","todoItemDelete","todoItem__buttonGreen","todoItem__buttonRed","todoItem__content","TodoList","todos","console","log","todosEl","map","item","key","id","checked","AddItem","onTextChange","event","target","value","onSubmitFunction","preventDefault","onAddItem","action","onSubmit","onChange","App","todoList","delItem","index","findIndex","slice","addItem","itemId","newTodoList","maxId","length","i","push","src","alt","logo","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.d8a0b028.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterPanel\":\"filter-panel_filterPanel__2PYhF\",\"filterPanel__button\":\"filter-panel_filterPanel__button__3b8_9\",\"filterPanel__button_clicked\":\"filter-panel_filterPanel__button_clicked__1ygR_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoItem\":\"todo-item_todoItem__2vtM_\",\"todoItemDone\":\"todo-item_todoItemDone__13F51\",\"todoItemImportant\":\"todo-item_todoItemImportant__1O8IG\",\"todoItemDelete\":\"todo-item_todoItemDelete__2hAZ3\",\"todoItem__content\":\"todo-item_todoItem__content__2I9tt\",\"todoItem__buttonGreen\":\"todo-item_todoItem__buttonGreen__1D1P7\",\"todoItem__buttonRed\":\"todo-item_todoItem__buttonRed__2BcyO\"};","module.exports = __webpack_public_path__ + \"static/media/react.df70b005.png\";","import AppTitle from './app-title';\r\nexport default AppTitle;\r\n","import React from 'react';\r\n\r\n//css\r\nimport './app-title.css';\r\n\r\nconst AppTitle = () => {\r\n    const title = 'ToDo App';\r\n    return <h1 className=\"appTitle\">{ title }</h1>;\r\n  }\r\n  \r\n// export default означает что экспортируем только одну сущность.\r\nexport default AppTitle;\r\n","import SearchPanel from './search-panel';\r\nexport default SearchPanel;\r\n","import React from 'react';\r\n\r\n// css\r\nimport './search-panel.css';\r\n\r\n// В данном случае в return должна быть обёртка <div></div>.\r\nconst SearchPanel = () => {\r\n  const searchTitle = 'To do:';\r\n  return (\r\n    <div className=\"search-panel\">\r\n      <p className=\"search-panel__title\" >{searchTitle}</p>\r\n      <input type=\"text\" placeholder=\"search...\" className=\"search-panel__input\" />\r\n      <button className=\"search-panel__button\">ПОИСК</button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// export default означает что экспортируем только одну сущность.\r\nexport default SearchPanel;\r\n","import FilterPanel from './filter-panel';\r\nexport default FilterPanel;\r\n","import React, { Component } from 'react';\r\n\r\n// Модульная стилизация.\r\nimport classes from './filter-panel.module.scss';\r\n\r\n// export default означает что экспортируем только одну сущность.\r\nexport default class FilterPanel extends Component {\r\n    state = {\r\n        all: true, \r\n        todo: false, \r\n        important: false\r\n    }\r\n\r\n    setAll = () => {\r\n        // console.log(this);\r\n        this.setState(() => {\r\n            return {\r\n                all: true, \r\n                todo: false, \r\n                important: false\r\n            }\r\n        });\r\n    }\r\n\r\n    setTodo = () => {\r\n        this.setState(() => {\r\n            return {\r\n                all: false, \r\n                todo: true, \r\n                important: false\r\n            }\r\n        });\r\n    }\r\n\r\n    setImportant = () => {\r\n        this.setState(() => {\r\n            return {\r\n                all: false, \r\n                todo: false, \r\n                important: true\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let allClasses = classes.filterPanel__button, \r\n            todoClasses = classes.filterPanel__button, \r\n            importantClasses = classes.filterPanel__button;\r\n\r\n        if (this.state.all) {\r\n            allClasses += ` ${classes.filterPanel__button_clicked}`;\r\n        }\r\n\r\n        if (this.state.todo) {\r\n            todoClasses += ` ${classes.filterPanel__button_clicked}`;\r\n        }\r\n\r\n        if (this.state.important) {\r\n            importantClasses += ` ${classes.filterPanel__button_clicked}`;\r\n        }\r\n\r\n        return(\r\n            <div className={classes.filterPanel}>\r\n                <button onClick={this.setAll} className={allClasses}>all</button>\r\n                <button onClick={this.setTodo} className={todoClasses}>todo</button>\r\n                <button onClick={this.setImportant} className={importantClasses}>important</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import TodoItem from './todo-item';\r\nexport default TodoItem;\r\n","import React, { Component } from 'react';\r\n\r\n// css\r\n// import './todo-item.module.css';\r\n// Модульная стилизация.\r\nimport classes from './todo-item.module.scss';\r\n\r\nexport default class TodoItem extends Component {\r\n    state = {\r\n        done: false, \r\n        important: false, \r\n        delete: false\r\n    }\r\n\r\n\r\n    itemDone = () => {\r\n        // console.log(this);\r\n        this.setState((state) => {\r\n            return {\r\n                done: !state.done\r\n                \r\n            }\r\n        });\r\n    }\r\n\r\n    setImportant = () => {\r\n        // console.log('Important click');\r\n        // Первый вариант изменения state.\r\n        // this.setState((important) => {\r\n        //     return {                \r\n        //         important: !important\r\n        //     }\r\n        // });\r\n        // Второй вариант изменения state.\r\n        this.setState((state) => {\r\n            return {                \r\n                important: !state.important\r\n            }\r\n        });\r\n    }\r\n\r\n    // delItem = () => {\r\n    //     this.setState((state) => {\r\n    //         return {\r\n    //             delete: !state.delete\r\n    //         }\r\n    //     });\r\n    // }\r\n    \r\n    render() {\r\n        // https://uk.reactjs.org/docs/react-dom.html#render\r\n        // https://uk.reactjs.org/docs/react-component.html#props\r\n        // Props представляет коллекцию значений, которые ассоциированы с компонентом.\r\n        // https://metanit.com/web/react/2.3.php\r\n\r\n        const {text, onDelItem} = this.props;\r\n\r\n        // console.log(classes)\r\n        // const styleLi = {\r\n        //     textDecoration: checked ? 'line-through' : ''\r\n        // };\r\n        \r\n        let itemClasses = classes.todoItem;\r\n\r\n        if (this.state.done) {\r\n            itemClasses += ` ${classes.todoItemDone}`;\r\n        }\r\n\r\n        if (this.state.important) {\r\n            itemClasses += ` ${classes.todoItemImportant}`\r\n        }\r\n\r\n        if (this.state.delete) {\r\n            \r\n            itemClasses += ` ${classes.todoItemDelete}`\r\n        }\r\n        \r\n        // Для второго варианта.\r\n        const {todoItem__buttonGreen, todoItem__buttonRed} = classes;\r\n    \r\n        return (\r\n            // <li onClick={this.itemDone} className={classes.todoItem  + ' ' + classes.todoItemDone}>\r\n            <li className={itemClasses}>\r\n                <div className={classes.todoItem__content}>\r\n                    <span onClick={this.itemDone}>{text}</span>\r\n                    <div>\r\n                        {/* Первый вариант. */}\r\n                        {/* <button className={classes.todoItem__buttonGreen}>i</button>\r\n                        <button className={classes.todoItem__buttonRed}>del</button> */}\r\n                        {/* Второй вариант. */}\r\n                        <button onClick={this.setImportant} className={todoItem__buttonGreen}>i</button>\r\n                        {/* <button onClick={this.delItem} className={todoItem__buttonRed}>del</button> */}\r\n                        <button onClick={onDelItem} className={todoItem__buttonRed}>del</button>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n","import TodoList from './todo-list';\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nimport TodoItem from './todo-item';\r\n\r\n// css\r\nimport './todo-list.css';\r\n\r\n// const TodoList = (props) => {\r\nconst TodoList = ({todos, onDelItem}) => {\r\n  // console.log(props);\r\n  // console.log(props.todos[0].text);\r\n  console.log(onDelItem);\r\n  const todosEl = todos.map((item) => {\r\n    return <TodoItem \r\n      key={item.id} \r\n      text={item.text} \r\n      checked={item.checked} \r\n      // onDelItem={() => {console.log('del item', item.id)}}\r\n      // onDelItem={()=>{item.onDelItem(item.id)}}\r\n      onDelItem={()=>{onDelItem(item.id)}}\r\n    />\r\n  });\r\n\r\n  return (\r\n    <ul className=\"todo-list\">\r\n      {/* <TodoItem text={todos[0].text} />\r\n      <TodoItem text={todos[1].text} />\r\n      <TodoItem text={todos[2].text} /> */}\r\n      {todosEl}\r\n    </ul>\r\n  );\r\n}\r\n\r\n// export default означает что экспортируем только одну сущность.\r\nexport default TodoList;\r\n","import AddItem from './add-item';\r\nexport default AddItem;\r\n","import React, { Component } from 'react';\r\n\r\n// css\r\nimport './add-item.css';\r\n\r\n// export default означает что экспортируем только одну сущность.\r\nexport default class AddItem extends Component {\r\n\r\n    state = {\r\n        text: ''\r\n    }\r\n\r\n    onTextChange = (event) => {\r\n        console.log(event.target.value);\r\n        \r\n        this.setState({\r\n            text: event.target.value\r\n        });\r\n    }\r\n\r\n    onSubmitFunction = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAddItem(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // https://uk.reactjs.org/docs/react-dom.html#render\r\n        // https://uk.reactjs.org/docs/react-component.html#props\r\n        // Props представляет коллекцию значений, которые ассоциированы с компонентом.\r\n        // https://metanit.com/web/react/2.3.php\r\n\r\n\r\n        const taskTitle = 'Task';\r\n        const {onAddItem} = this.props;\r\n\r\n        const text = this.state.text;\r\n        \r\n        return(\r\n            <form action=\"#\" onSubmit={this.onSubmitFunction}>\r\n                <div className=\"addItem\">\r\n                    <div className=\"addItem__title\">\r\n                        {taskTitle}\r\n                    </div>\r\n                    <input \r\n                        type=\"text\" \r\n                        onChange={this.onTextChange} \r\n                        value={this.state.text}\r\n                        placeholder=\"What do you need to do?\" \r\n                        className=\"addItem__input\" \r\n                    />\r\n                </div>\r\n                <div className=\"addItem__buttonDiv\">\r\n                    {/* Первый вариант onAddItem */}\r\n                    {/* <button onClick={ () => this.props.onAddItem(text) } className=\"addItem__button\">Add</button> */}\r\n                    {/* Второй вариант onAddItem */}\r\n                    {/* <button onClick={ () => onAddItem(text) } className=\"addItem__button\">Add</button> */}\r\n                    <button type=\"submit\" className=\"addItem__button\">Save Item</button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import App from './app';\r\nexport default App;\r\n","import React, { Component } from 'react';\r\n\r\n// components import\r\nimport AppTitle from './../app-title';\r\nimport SearchPanel from './../search-panel';\r\nimport FilterPanel from './../filter-panel';\r\nimport TodoList from './../todo-list';\r\nimport AddItem from './../add-item';\r\nimport Task from './../task';\r\nimport Save from './../save';\r\n\r\n// css\r\nimport './app.css';\r\n\r\n// img\r\nimport logo from './img/react.png';\r\n\r\n// export default означает что экспортируем только одну сущность.\r\nexport default class App extends Component {\r\n\r\n  // Объект state описывает внутреннее состояние компонента\r\n  // https://metanit.com/web/react/2.4.php\r\n  state = {\r\n    todoList: [\r\n      {id: 1, text: 'Wake up', done: true, important: false}, \r\n      {id: 2, text: 'Eat breakfast', done: false, important: false},\r\n      {id: 3, text: 'Go to work', done: false, important: false}\r\n    ]\r\n  }\r\n\r\n  delItem = (id) => {\r\n    // console.log(id);\r\n    \r\n    // Первый вариант срелочной функции.\r\n    // const index = this.state.todoList.findIndex((item) => {\r\n    //   if (id === item.id) {\r\n    //     return true;\r\n    //   }\r\n    //   else {\r\n    //     return false;\r\n    //   }\r\n    // });\r\n\r\n    // Второй вариант срелочной функции.\r\n    // const index = this.state.todoList.findIndex( (item) => id === item.id );\r\n\r\n    // console.log(index);\r\n\r\n    // Первый вариант setState.\r\n    // this.setState((state) => {\r\n    //   const index = this.state.todoList.findIndex( (item) => id === item.id );\r\n    // });\r\n\r\n    // Второй вариант setState.\r\n    this.setState(({todoList}) => {\r\n      const index = todoList.findIndex( (item) => id === item.id );\r\n      // todoList.splice(index, 1);\r\n\r\n      // Первый вариант\r\n      // const before = todoList.slice(0, index);\r\n      // const after = todoList.slice(index + 1);\r\n      // const newTodoList = before.concat(after);\r\n\r\n      // Второй вариант\r\n      const newTodoList = [\r\n        ...todoList.slice(0, index), \r\n        ...todoList.slice(index + 1)\r\n      ];\r\n\r\n      return {\r\n        todoList: newTodoList\r\n      }\r\n    });\r\n  }\r\n\r\n  addItem = (text) => {\r\n    console.log(text);\r\n\r\n    // Первый вариант setState.\r\n    this.setState((state) => {\r\n      // Копия массива.\r\n      const newTodoList = state.todoList.slice();\r\n      // Добавление нового элемента в массив.\r\n      let maxId = -1;\r\n      let itemId;\r\n      if (newTodoList.length > 0) {\r\n        maxId = newTodoList[0].id;\r\n      }\r\n      for (let i = 0; i < newTodoList.length; i++) {\r\n        if (newTodoList[i].id > maxId) {\r\n          maxId = newTodoList[i].id;\r\n        }\r\n      }\r\n      // Если массив пустой.\r\n      if (maxId === -1) {\r\n        itemId = 1;\r\n      }\r\n      // Если массив не пустой.\r\n      else {\r\n        itemId = maxId + 1;\r\n      }\r\n      newTodoList.push({id: itemId, text: text, checked: false});\r\n      // console.log(itemId, newTodoList);\r\n\r\n      return {\r\n        todoList: newTodoList\r\n      }\r\n    });\r\n\r\n    // Второй вариант setState.\r\n    // this.setState(({todoList}) => {\r\n    //   // Копия массива.\r\n    //   const newTodoList = todoList.slice();\r\n    //   // Добавление нового элемента в массив.\r\n    //   let maxId = -1;\r\n    //   let itemId;\r\n    //   if (newTodoList.length > 0) {\r\n    //     maxId = newTodoList[0].id;\r\n    //   }\r\n    //   for (let i = 0; i < newTodoList.length; i++) {\r\n    //     if (newTodoList[i].id > maxId) {\r\n    //       maxId = newTodoList[i].id;\r\n    //     }\r\n    //   }\r\n    //   // Если массив пустой.\r\n    //   if (maxId === -1) {\r\n    //     itemId = 1;\r\n    //   }\r\n    //   // Если массив не пустой.\r\n    //   else {\r\n    //     itemId = maxId + 1;\r\n    //   }\r\n    //   newTodoList.push({id: itemId, text: 'Added item', checked: true});\r\n    //   console.log(itemId, newTodoList);\r\n\r\n    //   return {\r\n    //     todoList: newTodoList\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div>\r\n          <img src=\"img/react.png\" alt=\"react\" className=\"picture\" />\r\n          <AppTitle />\r\n          <SearchPanel />\r\n          <FilterPanel />\r\n          <TodoList todos={this.state.todoList} onDelItem={this.delItem} />\r\n          <AddItem onAddItem={this.addItem} />\r\n          {/* <Task /> */}\r\n          {/* <Save /> */}\r\n          {/* Картинка из компонента */}\r\n          <img src={logo} alt=\"react\" className=\"picture\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// components import\nimport App from './components/app';\n\n\nReactDOM.render(\n  <App />, \n  document.querySelector('#root')\n);\n"],"sourceRoot":""}